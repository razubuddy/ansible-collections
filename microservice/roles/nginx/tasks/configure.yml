---
- name: "Create .ssh directory for {{ nginx_user }}"
  file:
    path: "{{ nginx_user_dir }}/.ssh"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: 0700

- name: "Add public ssh key for {{ nginx_user }}"
  authorized_key:
    user: "{{ nginx_user }}"
    state: present
    key: "{{ nginx_user_key }}"

- name: Ensure SFTP subsystem is set to internal-sftp
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Subsystem\s+sftp'
    line: "Subsystem\tsftp\tinternal-sftp"

- name: "Restrict {{ nginx_user }} to SFTP only"
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      Match User {{ nginx_user }}
          ForceCommand internal-sftp
          PasswordAuthentication no
          ChrootDirectory {{ nginx_user_dir }}
          PermitTunnel no
          AllowAgentForwarding no
          AllowTcpForwarding no
          X11Forwarding no
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR '{{ nginx_user }}' USER"
    create: yes
  notify: restart sshd

- name: "Create {{ nginx_site_dir }} deploy directory"
  become: yes
  file:
    path: "{{ nginx_user_dir }}/{{ nginx_site_dir }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: 0755
  notify: reload nginx

- name: Remove default nginx vhost config file (if configured).
  file:
    path: "{{ item }}/default"
    state: absent
  with_items: [ "{{ nginx_sites_available_path }}", "{{ nginx_sites_enabled_path }}" ]
  when:
  notify: restart nginx

- name: Change default nginx configuration
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_file_path }}"
  notify: reload nginx

- name: Add app server confiugration
  template:
    src: vhost.conf.j2
    dest: "{{ nginx_conf_path }}/{{ nginx_app_name }}.conf"
  notify: reload nginx

- name: Add app upstreams
  template:
    src: upstreams.j2
    dest: "{{ nginx_sites_available_path }}/{{ item.file }}"
  with_items: "{{ nginx_upstream_files }}"
  notify: reload nginx

- name: Enable upstreams
  command: "ln -s {{ nginx_sites_available_path }}/{{ nginx_app_name }}_upstreams_green {{ nginx_sites_enabled_path }}/{{ nginx_app_name }}_upstreams"
  args:
    creates: "{{ nginx_sites_enabled_path }}/{{ nginx_app_name }}_upstreams"
  notify: reload nginx

- name: Ensure nginx service is running as configured.
  service:
    name: nginx
    state: "{{ nginx_service_state }}"
    enabled: "{{ nginx_service_enabled }}"
